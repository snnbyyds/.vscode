{
    // [[Terminal]]
    "terminal.integrated.gpuAcceleration": "on",
    // [[C++]]
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "xaver.clang-format",
    // "C_Cpp.clang_format_style": "{ BasedOnStyle: Google, TabWidth: 4 }",
    "clangd.arguments": [
        // "--all-scopes-completion",
        "--background-index",
        "--clang-tidy",
        "--clang-tidy-checks=performance-*, bugprone-*, misc-*, google-*, modernize-*, readability-*, portability-*",
        "--compile-commands-dir=${workspaceFolder}/.vscode",
        "--completion-parse=auto",
        "--completion-style=detailed",
        "--enable-config",
        "--fallback-style=Google",
        "--function-arg-placeholders=true",
        "--header-insertion-decorators",
        "--header-insertion=never",
        "--include-cleaner-stdlib",
        "--log=info",
        "--pch-storage=memory",
        "--pretty",
        "--ranking-model=decision_forest",
        "-j=6",
    ],
    "clangd.fallbackFlags": [
        "-Wunused-variable",
        "-Wno-shadow",
        "-Wshadow-field-in-constructor-modified",
        "-Wshadow-ivar",
        "-Wno-implicit-function-declaration",
        "-Wno-switch",
        "-Wno-parentheses",
        "-Wbitwise-op-parentheses",
        "-Wdangling-else",
        "-Wlogical-not-parentheses",
        "-Wlogical-op-parentheses",
        "-Woverloaded-shift-op-parentheses",
        "-Wparentheses-equality",
        "-Wshift-op-parentheses",
        "-fuse-ld=lld",
        "-fsanitize=address",
        "-fsanitize=undefined"
    ],
    "clangd.enableCodeCompletion": true,
    "clangd.checkUpdates": true,
    "clangd.onConfigChanged": "restart",
    "clangd.serverCompletionRanking": true,
    "clangd.detectExtensionConflicts": true,
    "clangd.path": "/usr/bin/clangd",
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    // "editor.formatOnSave": true,
    // [[LLDB]]
    "lldb.commandCompletions": true,
    "lldb.dereferencePointers": true,
    "lldb.evaluateForHovers": true,
    "lldb.launch.expressions": "native",
    "lldb.showDisassembly": "never",
    "lldb.verboseLogging": true,
    "python.analysis.typeCheckingMode": "basic",
    // "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, TabWidth: 4 }",
    "clang-format.fallbackStyle": "Google",
}
